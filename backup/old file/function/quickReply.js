const { Client } = require('@line/bot-sdk');
const dotenv = require('dotenv').config();

const env = dotenv.parsed;

const client = new Client({
    channelAccessToken: env.LINE_ACCESS_TOKEN,
    channelSecret: env.LINE_SECRET_TOKEN
});

async function handleQuickReply(responseText) {
    console.log("handleQuickReply received:", responseText); // Log ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö

    let message = null;

    switch (responseText) {
        case "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏ñ‡∏ß‡πà‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏à‡∏≠‡∏á‡∏£‡∏ñ":
            message = {
                type: "text",
                text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:",
                quickReply: {
                    items: [
                        {
                            type: "action",
                            action: {
                                type: "message",
                                label: "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏ñ‡∏ß‡πà‡∏≤‡∏á",
                                text: "üîç"
                            }
                        },
                        {
                            type: "action",
                            action: {
                                type: "message",
                                label: "üöó ‡∏à‡∏≠‡∏á‡∏£‡∏ñ",
                                text: "üöó"
                            }
                        }
                    ]
                }
            };
            break;

        case "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ":
            message = {
                type: "text",
                text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:",
                quickReply: {
                    items: [
                        {
                            type: "action",
                            action: {
                                type: "message",
                                label: "‡∏£‡∏ñ‡πÄ‡∏Å‡πã‡∏á",
                                text: "‡∏£‡∏ñ‡πÄ‡∏Å‡πã‡∏á"
                            }
                        },
                        {
                            type: "action",
                            action: {
                                type: "message",
                                label: "‡∏£‡∏ñ‡∏ï‡∏π‡πâ",
                                text: "‡∏£‡∏ñ‡∏ï‡∏π‡πâ"
                            }
                        },
                        {
                            type: "action",
                            action: {
                                type: "message",
                                label: "‡∏£‡∏ñ‡∏Å‡∏£‡∏∞‡∏ö‡∏∞",
                                text: "‡∏£‡∏ñ‡∏Å‡∏£‡∏∞‡∏ö‡∏∞"
                            }
                        }
                    ]
                }
            };
            break;
    }

    if (message) {
        console.log("Quick Reply generated:", JSON.stringify(message, null, 2)); // Log Quick Reply ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö
        return message;
    } else {
        console.log("No matching Quick Reply case.");
        return null;
    }
}

module.exports = { handleQuickReply };
